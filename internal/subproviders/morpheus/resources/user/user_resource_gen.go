// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package user

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func UserResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"email": schema.StringAttribute{
				Required:            true,
				Description:         "Email address",
				MarkdownDescription: "Email address",
			},
			"id": schema.Int64Attribute{
				Computed: true,
			},
			"password": schema.StringAttribute{
				Required:            true,
				Sensitive:           true,
				Description:         "Password to apply to the user",
				MarkdownDescription: "Password to apply to the user",
			},
			"role_ids": schema.SetAttribute{
				ElementType: types.Int64Type,
				Required:    true,
			},
			"username": schema.StringAttribute{
				Required:            true,
				Description:         "Username (unique per tenant).",
				MarkdownDescription: "Username (unique per tenant).",
			},
		},
	}
}

type UserModel struct {
	Email    types.String `tfsdk:"email"`
	Id       types.Int64  `tfsdk:"id"`
	Password types.String `tfsdk:"password"`
	RoleIds  types.Set    `tfsdk:"role_ids"`
	Username types.String `tfsdk:"username"`
}
