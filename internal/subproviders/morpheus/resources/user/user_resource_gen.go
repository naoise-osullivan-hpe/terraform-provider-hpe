// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package user

import (
	"context"
	"github.com/HPE/terraform-provider-hpe/internal/subproviders/morpheus/modifiers"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func UserResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"email": schema.StringAttribute{
				Required:            true,
				Description:         "Email address",
				MarkdownDescription: "Email address",
			},
			"first_name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "User's first name (optional)",
				MarkdownDescription: "User's first name (optional)",
				PlanModifiers: []planmodifier.String{
					modifiers.NullableStringUpdateModifier{},
				},
			},
			"id": schema.Int64Attribute{
				Computed:            true,
				Description:         "User id",
				MarkdownDescription: "User id",
				PlanModifiers: []planmodifier.Int64{
					int64planmodifier.UseStateForUnknown(),
				},
			},
			"last_name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "User's last name (optional)",
				MarkdownDescription: "User's last name (optional)",
				PlanModifiers: []planmodifier.String{
					modifiers.NullableStringUpdateModifier{},
				},
			},
			"linux_key_pair_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Linux key pair id (optional)",
				MarkdownDescription: "Linux key pair id (optional)",
				PlanModifiers: []planmodifier.Int64{
					modifiers.NullableInt64UpdateModifier{},
				},
			},
			"linux_password_wo": schema.StringAttribute{
				Optional:            true,
				WriteOnly:           true,
				Description:         "Linux password (Write Only)",
				MarkdownDescription: "Linux password (Write Only)",
				PlanModifiers: []planmodifier.String{
					modifiers.NullableStringUpdateModifier{},
				},
			},
			"linux_password_wo_version": schema.Int64Attribute{
				Optional:            true,
				Description:         "Linux password version. Used to determine if linux_password_wo has been updated.",
				MarkdownDescription: "Linux password version. Used to determine if linux_password_wo has been updated.",
			},
			"linux_username": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Linux username",
				MarkdownDescription: "Linux username",
				PlanModifiers: []planmodifier.String{
					modifiers.NullableStringUpdateModifier{},
				},
			},
			"password_expired": schema.BoolAttribute{
				Computed: true,
			},
			"password_wo": schema.StringAttribute{
				Optional:            true,
				Sensitive:           true,
				WriteOnly:           true,
				Description:         "Password to apply to the user (Write Only)",
				MarkdownDescription: "Password to apply to the user (Write Only)",
				PlanModifiers: []planmodifier.String{
					modifiers.RequireOnCreateModifier{},
				},
			},
			"password_wo_version": schema.Int64Attribute{
				Optional:            true,
				Description:         "Password version. Used to determine if password_wo has been updated.",
				MarkdownDescription: "Password version. Used to determine if password_wo has been updated.",
			},
			"receive_notifications": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Receive Notifications?",
				MarkdownDescription: "Receive Notifications?",
				Default:             booldefault.StaticBool(true),
			},
			"role_ids": schema.SetAttribute{
				ElementType: types.Int64Type,
				Required:    true,
			},
			"tenant_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Tenant Id (accountId) create user in a sub tenant account instead of your own.",
				MarkdownDescription: "Tenant Id (accountId) create user in a sub tenant account instead of your own.",
			},
			"username": schema.StringAttribute{
				Required:            true,
				Description:         "Username (unique per tenant).",
				MarkdownDescription: "Username (unique per tenant).",
			},
			"windows_password_wo": schema.StringAttribute{
				Optional:            true,
				WriteOnly:           true,
				Description:         "Windows password (Write Only)",
				MarkdownDescription: "Windows password (Write Only)",
				PlanModifiers: []planmodifier.String{
					modifiers.NullableStringUpdateModifier{},
				},
			},
			"windows_password_wo_version": schema.Int64Attribute{
				Optional:            true,
				Description:         "Windows password version. Used to determine if windows_password_wo has been updated.",
				MarkdownDescription: "Windows password version. Used to determine if windows_password_wo has been updated.",
			},
			"windows_username": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Windows username",
				MarkdownDescription: "Windows username",
				PlanModifiers: []planmodifier.String{
					modifiers.NullableStringUpdateModifier{},
				},
			},
		},
	}
}

type UserModel struct {
	Email                    types.String `tfsdk:"email"`
	FirstName                types.String `tfsdk:"first_name"`
	Id                       types.Int64  `tfsdk:"id"`
	LastName                 types.String `tfsdk:"last_name"`
	LinuxKeyPairId           types.Int64  `tfsdk:"linux_key_pair_id"`
	LinuxPasswordWo          types.String `tfsdk:"linux_password_wo"`
	LinuxPasswordWoVersion   types.Int64  `tfsdk:"linux_password_wo_version"`
	LinuxUsername            types.String `tfsdk:"linux_username"`
	PasswordExpired          types.Bool   `tfsdk:"password_expired"`
	PasswordWo               types.String `tfsdk:"password_wo"`
	PasswordWoVersion        types.Int64  `tfsdk:"password_wo_version"`
	ReceiveNotifications     types.Bool   `tfsdk:"receive_notifications"`
	RoleIds                  types.Set    `tfsdk:"role_ids"`
	TenantId                 types.Int64  `tfsdk:"tenant_id"`
	Username                 types.String `tfsdk:"username"`
	WindowsPasswordWo        types.String `tfsdk:"windows_password_wo"`
	WindowsPasswordWoVersion types.Int64  `tfsdk:"windows_password_wo_version"`
	WindowsUsername          types.String `tfsdk:"windows_username"`
}
