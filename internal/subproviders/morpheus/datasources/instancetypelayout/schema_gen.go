// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package instancetypelayout

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func InstanceTypeLayoutDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"code": schema.StringAttribute{
				Computed:            true,
				Description:         "Optional code for use with policies",
				MarkdownDescription: "Optional code for use with policies",
			},
			"description": schema.StringAttribute{
				Computed:            true,
				Description:         "The description of the instance layout",
				MarkdownDescription: "The description of the instance layout",
			},
			"id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Morpheus ID of the instance layout",
				MarkdownDescription: "Morpheus ID of the instance layout",
			},
			"name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The name of the Morpheus instance layout",
				MarkdownDescription: "The name of the Morpheus instance layout",
				Validators: []validator.String{
					stringvalidator.ConflictsWith(path.Expressions{
						path.MatchRoot("id"),
					}...),
				},
			},
			"sort_order": schema.Int64Attribute{
				Computed:            true,
				Description:         "Display order of the layout higher to lower",
				MarkdownDescription: "Display order of the layout higher to lower",
			},
			"version": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The version of the instance layout",
				MarkdownDescription: "The version of the instance layout",
				Validators: []validator.String{
					stringvalidator.ConflictsWith(path.Expressions{
						path.MatchRoot("id"),
					}...),
				},
			},
		},
	}
}

type InstanceTypeLayoutModel struct {
	Code        types.String `tfsdk:"code"`
	Description types.String `tfsdk:"description"`
	Id          types.Int64  `tfsdk:"id"`
	Name        types.String `tfsdk:"name"`
	SortOrder   types.Int64  `tfsdk:"sort_order"`
	Version     types.String `tfsdk:"version"`
}
