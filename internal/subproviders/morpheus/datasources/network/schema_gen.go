// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package network

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func NetworkDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"active": schema.BoolAttribute{
				Computed: true,
			},
			"cidr": schema.StringAttribute{
				Computed:            true,
				Description:         "Network CIDR",
				MarkdownDescription: "Network CIDR",
			},
			"description": schema.StringAttribute{
				Computed:            true,
				Description:         "Description",
				MarkdownDescription: "Description",
			},
			"display_name": schema.StringAttribute{
				Computed:            true,
				Description:         "Network Display Name",
				MarkdownDescription: "Network Display Name",
			},
			"id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Morpheus ID of the network being referenced",
				MarkdownDescription: "Morpheus ID of the network being referenced",
				Validators: []validator.Int64{
					int64validator.ConflictsWith(path.Expressions{
						path.MatchRoot("name"),
					}...),
				},
			},
			"labels": schema.SetAttribute{
				ElementType: types.StringType,
				Computed:    true,
			},
			"name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The name of the Morpheus network",
				MarkdownDescription: "The name of the Morpheus network",
				Validators: []validator.String{
					stringvalidator.ConflictsWith(path.Expressions{
						path.MatchRoot("id"),
					}...),
				},
			},
			"visibility": schema.StringAttribute{
				Computed: true,
			},
		},
	}
}

type NetworkModel struct {
	Active      types.Bool   `tfsdk:"active"`
	Cidr        types.String `tfsdk:"cidr"`
	Description types.String `tfsdk:"description"`
	DisplayName types.String `tfsdk:"display_name"`
	Id          types.Int64  `tfsdk:"id"`
	Labels      types.Set    `tfsdk:"labels"`
	Name        types.String `tfsdk:"name"`
	Visibility  types.String `tfsdk:"visibility"`
}
